.. include:: css.txt

.. _install_generic:


Generic Installation Instructions
#################################

If you want the latest on the edge installation of Theano, you want `bleeding_edge`_.
Otherwise go for the `stable`_.

.. note::

   If you are behind a proxy, you must do some extra configuration steps
   before starting the installation. You must set the environment
   variable ``http_proxy`` to the proxy address. Using bash this is
   accomplished with the command
   ``export http_proxy="http://user:pass@my.site:port/"``
   You can also provide the ``--proxy=[user:pass@]url:port`` parameter
   to pip. The ``[user:pass@]`` portion is optional.


.. _stable:

Stable Installation
-------------------

The recommended way to obtain the latest stable version of Theano is from PyPI using
pip_. Any argument between <...> means it is optional. 

.. raw:: html

    <pre><span class="red">&#60;sudo&#62;</span> pip install <span class="blue">&#60;--user&#62;</span> Theano[test, doc]</pre>

- Use :red:`sudo` for a root installation.

- Use :blue:`user` for a user installation without admin rights. It will install Theano in your local site-packages.

- [test] will add to the install the required packages for testing.

- [doc] will add to the install the required packages for the documentation.

.. _bleeding_edge:

Bleeding-Edge Installation (recommended)
----------------------------------------

The following are general instructions that will set you up with the
bleeding-edge version of Theano. Any argument between <...> means it is optional.

.. raw:: html

    <pre><span class="red">&#60;sudo&#62;</span> pip install <span class="blue">&#60;--user&#62;</span> <span class="pink">&#60;--no-deps&#62;</span> git+https://github.com/Theano/Theano.git#egg=Theano</pre>

- Use :red:`sudo` for a root installation.

- Use :blue:`user` for a user installation without admin rights. It will install Theano in your local site-packages.

- Use :pink:`no-deps` when you don't want the dependencies of Theano to not be installed through pip. This is important when they have already been installed as system packages. 

Developer Installation
-----------------------

The following are instructions that will guide you to setup Theano in
*editable* mode. This will allow you to download the latest source code and
link the Theano installation to it, so that your modifications of the source
code will take effect without requiring a reinstall of Theano.  

Run these instructions in the directory you want to download the source code
into. Make sure not to move it, as the Theano installation will be *linked*
to this location and will stop working otherwise.

.. raw:: html

    <pre>git clone git://github.com/Theano/Theano.git
    cd Theano
    <span class="red">&#60;sudo&#62;</span> pip install <span class="blue">&#60;--user&#62;</span> <span class="pink">&#60;--no-deps&#62;</span> <span class="green">-e .</span></pre>

- Any argument between <...> is optional.

- Use :red:`sudo` for a root installation.

- Use :blue:`user` for a user installation without admin rights. It will install Theano in your local site-packages.

- Use :pink:`no-deps` when you don't want the dependencies of Theano to not be installed through pip. This is important when they have already been installed as system packages. 

- :green:`-e` makes your installation *editable*, i.e., it links it to your
  source directory.

Setting up the GPU (optional)
----------------------------

.. include:: install_gpu.txt
    :start-line: 6

Testing your installation
--------------------------

Testing packages
^^^^^^^^^^^^^^^^

Once you have installed Theano, you should run the test suite. 

.. code-block:: bash

    python -c "import numpy; numpy.test()"
    python -c "import scipy; scipy.test()"
    THEANO_FLAGS=''; python -c "import theano; theano.test()"

All Theano tests should pass (skipped tests and known failures are normal). If
some test fails on your machine, you are encouraged to tell us what went
wrong on the ``theano-users@googlegroups.com`` mailing list.

Testing BLAS
^^^^^^^^^^^^

It is recommended to test your Theano/BLAS integration. There are many versions
of BLAS that exist and there can be up to 10x speed difference between them.
Also, having Theano link directly against BLAS instead of using NumPy/SciPy as
an intermediate layer reduces the computational overhead. This is
important for BLAS calls to ``ger``, ``gemv`` and small ``gemm`` operations
(automatically called when needed when you use ``dot()``). To run the
Theano/BLAS speed test:

.. code-block:: bash

    python `python -c "import os, theano; print os.path.dirname(theano.__file__)"`/misc/check_blas.py

This will print a table with different versions of BLAS/numbers of
threads on multiple CPUs and GPUs. It will also print some Theano/NumPy
configuration information. Then, it will print the running time of the same
benchmarks for your installation. Try to find a CPU similar to yours in
the table, and check that the single-threaded timings are roughly the same.

Theano should link to a parallel version of Blas and use all cores
when possible. By default it should use all cores. Set the environment
variable "OMP_NUM_THREADS=N" to specify to use N threads.

If you encountered any trouble, head to the :ref:`troubleshooting` page.
