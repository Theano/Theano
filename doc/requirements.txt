Requirements
============

    Python_ 2 >= 2.6 or Python_ 3 >= 3.3
        The development package (python-dev or python-devel on most Linux distributions) is recommended (see just below). Python 2.4 was supported up to and including the release 0.6. Python 3 is supported past the 3.3 release.

    `NumPy <http://numpy.scipy.org/>`_ >= 1.7.1 < MAX_VERSION
        Earlier versions could work, but we donâ€™t test it.

    `SciPy <http://scipy.org>`_ >= 0.11 < MAX_VERSION
        Only currently required for sparse matrix and special functions support, but highly recommended. SciPy >=0.8 could work, but earlier versions have known bugs with sparse matrices.

    `BLAS`_ installation (with Level 3 functionality)
        Recommended: MKL, which is free through Conda. Otherwise, we suggest to install OpenBLAS, with the development headers (``-dev``, ``-devel``, depending on your Linux distribution).

.. _BLAS: http://en.wikipedia.org/wiki/Basic_Linear_Algebra_Subprograms
.. _Python: http://www.python.org/

**(Optional)**

    ``python-dev``, ``g++`` >= 4.2
        **Highly recommended.** Theano can fall back on a NumPy-based Python execution model, but a C compiler allows for vastly faster execution.

    `nose <http://somethingaboutorange.com/mrl/projects/nose/>`_ >= 1.3.0
        Recommended, to run Theano's test-suite.

    `Sphinx <http://sphinx.pocoo.org/>`_ >= 0.5.1, `pygments <http://pygments.org/>`_
        For building the documentation. LaTeX_ and dvipng_ are also necessary for math to show up as images.

    `pydot-ng <https://github.com/pydot/pydot-ng>`_
        To handle large picture for gif/images.

    `NVIDIA CUDA drivers and SDK`_
        **Highly recommended** Required for GPU code generation/execution on NVIDIA gpus. See instruction below.

    `libgpuarray`_
        Required for GPU/CPU code generation on CUDA and OpenCL devices (see: :ref:`gpuarray`.)

Requirements through Conda (recommended)
----------------------------------------

We only support the installation of the requirements through conda.

.. note::

    If you want fast compiled code (recommended), make sure you have g++ (Windows/Linux) or Clang (OS X) installed.

Install Anaconda
^^^^^^^^^^^^^^^^

Follow this `link <http://conda.pydata.org/miniconda.html>`__ to install Miniconda.

Install mandatory requirements
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

    .. code-block:: bash

        conda install numpy scipy mkl

Install optional requirements
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

    .. code-block:: bash

        conda install nose sphinx pydot-ng

Follow the next section to install the GPU backends.


GPU (recommended)
-----------------

    `NVIDIA CUDA drivers and SDK`_
        Required for GPU code generation/execution on NVIDIA gpus

    `libgpuarray`_
        Required for GPU/CPU code generation on CUDA and OpenCL devices (see: :ref:`gpuarray`.)
        The new backend (optional, by default Theano will use the old backend), which allows to generate GPU/CPU code for CUDA and OpenCL devices.

        .. note::

            OpenCL support is still minimal for now.

Install CUDA drivers
^^^^^^^^^^^^^^^^^^^^
Follow this `link <https://developer.nvidia.com/cuda-downloads>`__ to install the CUDA driver and the CUDA Toolkit.

.. note::

    (Sanity check: The *bin* subfolder should contain an *nvcc*
    program which is the compiler for GPU code.)  This folder is called the *cuda
    root* directory.

You must reboot the computer after the driver installation. To test
that it was loaded correctly after the reboot, run the command
`nvidia-smi` from the command line.

Fix 'lib' path
^^^^^^^^^^^^^^

Add the 'lib' subdirectory (and/or 'lib64' subdirectory if you have a 64-bit Linux
computer) to your ``$LD_LIBRARY_PATH`` environment variable.

Change Theano config
^^^^^^^^^^^^^^^^^^^^

Any one of here is enough:

* Define a $CUDA_ROOT environment variable to equal the cuda root directory, as in ``CUDA_ROOT=/path/to/cuda/root``, or
* add a ``cuda.root`` flag to :envvar:`THEANO_FLAGS`, as in ``THEANO_FLAGS='cuda.root=/path/to/cuda/root'``, or
* add a [cuda] section to your .theanorc file containing the option ``root = /path/to/cuda/root``.

.. _LaTeX: http://www.latex-project.org/
.. _dvipng: http://savannah.nongnu.org/projects/dvipng/
.. _NVIDIA CUDA drivers and SDK: http://developer.nvidia.com/object/gpucomputing.html
.. _libgpuarray: http://deeplearning.net/software/libgpuarray/installation.html
